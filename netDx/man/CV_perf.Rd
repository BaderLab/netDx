% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CV_perf.R
\name{CV_perf}
\alias{CV_perf}
\title{ROC curve for cross validation runs}
\usage{
CV_perf(fList, pheno_DF, predClass, outDir, justGetError = FALSE,
  errorType = "AUPR", verbose = TRUE)
}
\arguments{
\item{fList}{(char) list of GM result files}

\item{pheno_DF}{(data.frame) ID: patient ID ; STATUS: patient STATUS}

\item{predClass}{(char) class for which predictor is being built}

\item{outDir}{(char) path to output files}

\item{justGetError}{(logical)  if FALSE , computes all stats (plots AUC 
curve etc., etc., if TRUE, simply returns cross-validation error.
The latter is useful for iterative feature selection.}

\item{errorType}{(char) one of [AUPR|maxF1]; the type of performance 
measure to use for evaluating cross-validation}

\item{verbose}{(logical) print messages}
}
\value{
Depends on value of \code{justGetError}. If justGetError=TRUE,
then returns the statistic requested by the \code{errorType} parameter.
Note: if any of the folds returns an NA the prediction/roc/auc/f, which
happens if only one datapoint is available in the PRANK file, then 
the error metric returned is 0. 
Else returns nothing, but has the side effect of printing the AUC
for all folds to the output file CV_stats.txt in \code{outDir}. In 
this scenario also plots the n-fold AUC curve in \code{CV_AUC.pdf}.
}
\description{
ROC curve for cross validation runs
}
\examples{
data(TCGA_full)
pDir <- sprintf("\%s/extdata/GM_PRANK",
path.package("netDx"))
pranks <- sprintf("\%s/\%s",pDir,
dir(pDir,pattern="PRANK$")) # example PRANK
x <- CV_perf(pranks,pheno_full, "LumA",".")
x <- CV_perf(pranks,pheno_full, "LumA",justGetError=TRUE)
}
