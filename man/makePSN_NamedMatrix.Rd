% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/makePSN_NamedMatrix.R
\name{makePSN_NamedMatrix}
\alias{makePSN_NamedMatrix}
\title{Create patient networks from full matrix of named measurements}
\usage{
makePSN_NamedMatrix(xpr, nm, namedSets, outDir = tempdir(),
  simMetric = "pearson", verbose = TRUE, numCores = 1L,
  writeProfiles = TRUE, sparsify = FALSE, useSparsify2 = FALSE,
  cutoff = 0.3, sparsify_edgeMax = Inf, sparsify_maxInt = 50,
  minMembers = 1L, runSerially = FALSE, append = FALSE, ...)
}
\arguments{
\item{xpr}{(matrix) rows are measurements, columns are samples. Columns
must be named (patient ID)}

\item{nm}{(character) names for measurements corresponding to row order
of \code{xpr}. Must match the names in the named sets specified in
\code{nameSets}}

\item{namedSets}{(list) sets of names to be grouped together. keys are
set names, and networks will be named as these. values are character
vectors corresponding to groups of names (matching those in \code{nm})
that are input to network generation}

\item{outDir}{(char) path to directory where networks are written. 
If missing, is set to tempdir()}

\item{simMetric}{(char) measure of similarity. See \code{getSimilarity()}
for details. If writeProfiles is set to TRUE, must be one of pearson
(Pearson correlation) or MI (correlation by mutual information).}

\item{verbose}{(logical) print detailed messages}

\item{numCores}{(integer) number of cores for parallel network generation}

\item{writeProfiles}{(logical) use GeneMANIA's ProfileToNetworkDriver to
create interaction networks. If TRUE, this function writes subsets 
of the original data corresponding to networks to file (profiles). 
If FALSE, uses  getSimilarity() and writes interaction networks.}

\item{sparsify}{(logical). If TRUE, sparsifies patient similarity network.
See useSparsify2, sparsify_edgeMax and sparsify_maxInt}

\item{useSparsify2}{(logical). Cleaner sparsification routine. 
If FALSE, uses new matrix-based sparsify3}

\item{cutoff}{(numeric) patients with similarity smaller than this value
are not included in the corresponding interaction network}

\item{sparsify_edgeMax}{(numeric) Max number of edges to include in the
final network}

\item{sparsify_maxInt}{(numeric) Max num edges per node in sparsified network.}

\item{minMembers}{(integer) min number of measures in a network for 
the network to be included. Useful when similarity measures require a minimum
number of measures to be meaningful (e.g. minimum of 6 for Pearson correlation)}

\item{runSerially}{(logical) set to TRUE to create nets serially, rather 
than in parallel}

\item{append}{(logical) if TRUE does not overwrite netDir.}

\item{...}{passed to \code{getSimilarity()}}
}
\value{
(char) Basename of files to which networks are written.  
Side effect of writing interaction networks in \code{outDir}
}
\description{
Create patient networks from full matrix of named measurements
}
\details{
Creates patient similarity networks when full matrices of 
data are provided (e.g. gene expression, questionnaire results). To
generate networks from sparse data such as CNVs or indels, use 
\code{makePSN_RangeSets} instead.
The rows of the data matrix (xpr) must be named (nm); one network is 
create for each named set (namedSets). There are two options for the 
way in which networks are created, depending on the value of
\code{writeProfiles}. 
1. writeProfiles=TRUE: GeneMANIA is used to generate interaction networks
and sparsify networks. This only works if the desired measure of
similarity is network-level Pearson correlation; an example is networks
at the level of pathways. In this case, the user does not explicitly 
specify a similarity measure and \code{simMetric} is ignored.
2. writeProfiles=FALSE: GeneMANIA is not used to generate interaction
networks. Rather, netDx uses \code{simMetric} to create interaction
networks. Networks can be sparsified by excluding weak connections 
(cutoff).
}
\examples{
data(xpr,pheno,cnv_GR,pathwayList); 
# you may get a warning message that the output directory already
# exists; ignore it
out <- makePSN_NamedMatrix(xpr,rownames(xpr),pathwayList, 
	".",writeProfiles=TRUE)
}
