% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sparsifyNet.R
\name{sparsifyNet}
\alias{sparsifyNet}
\title{Sparsifies patient similarity network}
\usage{
sparsifyNet(net, outFile, k = 50L, MAX_INT = 600L, MAX_PCT = 0.02,
  numPatients, keepTies = TRUE, verbose = TRUE, cutoff = 0.3)
}
\arguments{
\item{net}{(char or data.frame) If of type char, should path to 
tab-separated SIF file containing the network; there should be no header
row. If of type data.frame, should have three columns: 
1) patient 1 (char), 2) patient 2 (char), 3) edge weight (numeric)}

\item{outFile}{(char) path to write sparsified network}

\item{k}{(integer) for k nearest-neighbours}

\item{MAX_INT}{(integer) upper bound on number of interactions per 
patient}

\item{MAX_PCT}{(numeric 0-1) upper bound on number of interactions 
as fraction of the total number of patients. See Details.}

\item{numPatients}{(integer) number of patients in the network. See 
Details.}

\item{keepTies}{(logical) keep edge ties. See Details}

\item{verbose}{(logical) print messages}

\item{cutoff}{(value between 0 and 1) min edge value to keep}
}
\value{
No value. Writes sparsified matrix to \code{outFile}
}
\description{
Sparsifies patient similarity network
}
\details{
Extremely dense patient networks (num interactions approaching
n choose 2, where n is number of patients) arise from full matrix data
such as gene expression measures. Such networks may mostly comprise of
uninformative low-edge weights. When combined with tens to thousands
of other such networks, they will generate out of memory errors upon
running a GeneMANIA query for cross validation. For example, a dataset
with 500 patients, which uses gene expression data organized by 1000 
pathways, will generate 1,000 networks each with 124,750 interactions.

This function provides a simple rule to sparsify a network, by 
retaining the top nearest neighbours for each patient in the network. 
The rules for sparsification are based on GeneMANIA's rules for the same
algorithm and are as follows:
for each patient p:
 1. keep the top \code{k} edge weights.
 2. sort edges by decreasing weight.
	3. if \code{keepTies=FALSE}, keep only the first occurring instance of
	each tied edge.
4. if \code{keepTies=TRUE}, keep ties up to a specified maximum 
	fraction of the total number of patients 
	\code{(MAX_PCT*numPatients)}, or 600 interactions, 
whichever is less.
done
}
\examples{
require(reshape2) # for melt()
data(xpr,pheno,cnv_GR)
x <- reshape2::melt(cor(xpr)) # patient 1, patient 2, edge weight
sparsifyNet(x,outFile="tmp.txt",numPatients=40)
}
