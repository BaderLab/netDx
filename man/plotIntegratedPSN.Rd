% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotIntegratedPSN.R
\name{plotIntegratedPSN}
\alias{plotIntegratedPSN}
\title{Visualize integrated patient similarity network based on selected features}
\usage{
plotIntegratedPSN(setName = "predictor", pheno, baseDir, netNames,
  topX = 0.2, aggFun = "MEAN", outDir = tempdir(),
  calcShortestPath = TRUE, savePaths = FALSE, nodeSize = 100,
  nodeTransparency = 200, edgeTransparency = 120,
  edgeStroke = "#999999", edgeWidth = 1, imageFormat = "PNG",
  nodePalette = "Dark2", verbose = FALSE, runCytoscape = TRUE)
}
\arguments{
\item{setName}{(char) network name, used for output files and network name
in Cytoscape.}

\item{pheno}{(data.frame) sample metadata, requires ID and STATUS column.
The status column will be used to retrieve patient class names}

\item{baseDir}{(char) path to the results directory one level above class-
specific interaction networks.
Standard nested cross-validation: <dataDir>/rng1 so the program finds
<dataDir>/rng1/<classA>/tmp/INTERACTIONS/
Single round of cross-validation: <dataDir>, so the program finds
<dataDir>/<classA>/tmp/INTERACTIONS/}

\item{netNames}{(list) keys are classes, and each value is a vector with
the names of patient similarity networks to combine for the integrated
network. These should probably be feature-selected networks}

\item{topX}{(numeric between 0 and 1) fraction of strongest edges to keep
e.g. topX=0.2 will keep 20\% top edges}

\item{aggFun}{(char) function to aggregate edges from different PSN}

\item{outDir}{(char) path to directory for tmp work}

\item{calcShortestPath}{(logical) if TRUE, computes weighted shortest path}

\item{savePaths}{(logical) if TRUE, writes all pairwise shortest paths to file. 
Unless you plan to analyse these separately from looking at the shortest path
violin plots or integrated PSN in Cytoscape, probably good to set to FALSE.
for all pairwise classes}

\item{nodeSize}{(integer) Node size in Cytoscape-rendered PSN}

\item{nodeTransparency}{(integer) Node transparency in Cytoscape-rendered
PSN.}

\item{edgeTransparency}{(integer) Edge transparency in Cytoscape-rendered}

\item{edgeStroke}{(character) hex colour for edge stroke.}

\item{edgeWidth}{(integer) Edge line width in Cytoscape-rendered PSN.}

\item{imageFormat}{(character) file format to export PSN to image. One of
JPEG, PDF, PNG, or SVG (see RCy3::exportImage()).}

\item{nodePalette}{(character) RColorBrewer palette for node colours.}

\item{verbose}{(logical) print detailed messages}

\item{runCytoscape}{(logical) if TRUE will visualize PSN in Cytoscape
(Cytoscape must be launched for this to happen). If FALSE, will compute
and write integrated PSN to file but will not visualize the network. 
Set to FALSE if you do not have or want to run Cytoscape (e.g. running on
terminal or Docker container, where Cytoscape may be unavailable).}
}
\value{
(list) information about the integrated network
is the unpruned network and not the one displayed in Cytoscape. Edges are
weighted by similarity
2) aggPDN_pruned: (char) path to file with pruned patient dissimilarity
network, derived by inverting edge weights of the net in aggPSN_Full and
keeping the strongest edges.
2) incNets: (char) vector of networks used for integration
3) network_suid: (char) Cytoscape network identifier, so user may further
4) netPng: (char) path to png file with patient dissimilarity network
created by Cytoscape
}
\description{
Visualize integrated patient similarity network based on selected features
}
\details{
Generates a Cytoscape network where nodes are patients and edges
are weighted by aggregate pairwise patient similarity.
Integrated PSN plotting is intended to run
after feature selection, which identifies the subset of input networks
predictive for each class of interest. The method of generating the network
is as follows:
All networks feature-selected in either patient category are concatenated;
where a network is feature-selected in both categories, it is included once.
The similarity between two patients in the integrated network is the mean of
corresponding pairwise similarities. Dissimilarity is defined as
1-similarity, and Dijkstra distances are computed on this resulting network.
For visualization, only edges representing the top fraction of distances
(strongest edge weights) are included.
}
\examples{
require(netDx.examples)
data(KIRC_pheno)
inDir <- sprintf("\%s/extdata/KIRC_output", path.package("netDx.examples"))
outDir <- paste(getwd(),"plots",sep="/")
if (!file.exists(outDir)) dir.create(outDir)
featScores <- getFeatureScores(inDir,predClasses=c("SURVIVEYES","SURVIVENO"))
featSelNet <- lapply(featScores, function(x) {
callFeatSel(x, fsCutoff=10, fsPctPass=0.7)
})
plotIntegratedPSN(pheno=KIRC_pheno,baseDir=sprintf("\%s/rng1",inDir),
netNames=featSelNet,outDir=outDir,runCytoscape=FALSE)
}
