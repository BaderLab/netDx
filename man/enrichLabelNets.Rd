% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/enrichLabelNets.R
\name{enrichLabelNets}
\alias{enrichLabelNets}
\title{Score networks based on their edge bias towards (+,+) interactions}
\usage{
enrichLabelNets(netDir, pheno_DF, outDir, numReps = 50L, minEnr = -1,
  outPref = "enrichLabelNets", verbose = TRUE, setSeed = 42L,
  enrType = "binary", numCores = 1L, predClass, tmpDir = "/tmp",
  netGrep = "_cont.txt$", getShufResults = FALSE, ...)
}
\arguments{
\item{netDir}{(char) path to dir containing all networks}

\item{pheno_DF}{(data.frame) for details see \code{getEnr()}}

\item{outDir}{(char) path to dir where output/log files are written}

\item{numReps}{(integer) Max num reps for shuffling class status. Adaptive permutation is
used so in practice, few networks would be evaluated to this extent}

\item{minEnr}{(numeric from -1 to 1) Only include networks with ENR
value greater than this threshold.}

\item{outPref}{(char) prefix for log file (not counting the dir name)}

\item{verbose}{(logical) print messages}

\item{setSeed}{(integer) if not NULL, integer is set as seed
to ensure reproducibility in random number generation}

\item{enrType}{(char) see getEnr()}

\item{numCores}{(integer) num cores for parallel ENR computation of
all networks}

\item{predClass}{(char) see \code{getEnr()}}

\item{tmpDir}{(char) path to dir where temporary work can be stored}

\item{netGrep}{(char) pattern to grep for network files in netDir}

\item{getShufResults}{(logical) if TRUE, returns the ENR for each
permutation, for all networks. Warning: this is likely to be huge. Use
this flag for debugging purposes only.}

\item{...}{parameters for \code{countIntType_batch()}.}
}
\value{
(data.frame) networks stats from clique-filtering, one record per network
}
\description{
Score networks based on their edge bias towards (+,+) interactions
}
\details{
Determines which networks are statistically enriched for 
interactions between the class of interest. The resulting \code{ENR} 
score and corresponding p-value serve as a filter to exclude random-like
interaction networks before using feature selection. This filter is
known to be important when patient networks are sparse and binary; e.g.
networks based on shared overlap of CNV locations.  If the filter is 
not applied, GeneMANIA WILL promote networks with slight bias towards 
(+,+) edges , even if these are small and random-like.

The measure of (+,+)-enrichment is defined as: 
ENR(network N) = ((num (+,+) edges) - (num other edges))/(num edges).
A p-value for per-network ENR is obtained non-parametrically by
measuring a null distribution for ENR following multiple permutations
of case-control labels.
}
\examples{
data(npheno)
netDir <- sprintf("\%s/extdata/example_nets",path.package("netDx"))
x <- enrichLabelNets(netDir,npheno,".",predClass="case",netGrep="txt$",
	numReps=500)
print(x)

}
