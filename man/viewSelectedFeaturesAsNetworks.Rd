% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotEmap.R
\name{viewSelectedFeaturesAsNetworks}
\alias{viewSelectedFeaturesAsNetworks}
\title{Create EnrichmentMap in Cytoscape to visualize predictive pathways}
\usage{
viewSelectedFeaturesAsNetworks(
  gmtFile,
  nodeAttrFile,
  netName = "generic",
  scoreCol = "maxScore",
  minScore = 1,
  maxScore = 10,
  nodeFillStops = c(7, 9),
  colorScheme = "cont_heatmap",
  imageFormat = "png",
  verbose = FALSE,
  createStyle = TRUE,
  groupClusters = FALSE,
  hideNodeLabels = FALSE
)
}
\arguments{
\item{gmtFile}{(character) file path to GMT file 
(generated by getEMapInput()).
NOTE: This needs to be the absolute path name}

\item{nodeAttrFile}{(list) file path to nodeAttr.txt file (generated by
getEMapInput())}

\item{netName}{(character) name for network in Cytoscape. Using the patient
class name is a good idea. (e.g. SURVIVE_YES and SURVIVE_NO).}

\item{scoreCol}{(character) column of nodeAttrFile with the node score}

\item{minScore}{(integer) minimum score of node to show}

\item{maxScore}{(integer) maximum score of node to show}

\item{nodeFillStops}{(integer) vector of length 2. Contains score values
that indicate "good signal" and "best signal". Nodes with values
above "good signal" are coloured orange, and those with "best signal"
are coloured red.}

\item{colorScheme}{(character) colour scheme for nodes. 'cont_heatmap' 
sets a discrete map ranging from yellow to red for increasing scores. 
'netDx_ms' is the colour scheme used in the netDx methods paper.
This map is (<=6: white; 7-9: orange; 10: red)}

\item{imageFormat}{(character) one of PNG, PDF, SVG, or JPEG}

\item{verbose}{(logical) print messages}

\item{createStyle}{(logical) if generating more than one EMap, set to 
TRUE for first one and to FALSE for subsequent. Due to limitation in 
current version of RCy3}

\item{groupClusters}{(logical) if TRUE, redraws network with thematic
clusters lined up in rows. This setting is useful if setting this flag to
FALSE results in a cluttered network. However, applying this layout will
organize nodes in each cluster into circles, which loses the c
topology.}

\item{hideNodeLabels}{(logical) if TRUE hides the node label in the EnrichmentMap.
Cluster labels remain visible.}
}
\value{
No value. Side effect of plotting the network view for features in an open 
session of Cytoscape.
}
\description{
Create a network where nodes are predictive pathways passing
certain cutoff and edges indicate similarity in gene-sets. Pathways are 
then clustered to identify themes of predictive pathways. Generates one 
such network for each patient label.
}
\examples{
#refer to getEMapInput_many.R for working getEMapInput_many() example
data(featScores)
pathwayList <- readPathways(fetchPathwayDefinitions("October",2020))
pathwayList <- pathwayList[seq_len(5)]
netInfoFile <- system.file("extdata",
	paste("example_output","inputNets.txt",sep=getFileSep()),
	package="netDx")
netTypes <- read.delim(netInfoFile,sep='\t',header=FALSE,as.is=TRUE)
outDir <- paste(tempdir(),'plots',sep=getFileSep())
if (!file.exists(outDir)) dir.create(outDir)
EMap_input <- getEMapInput_many(featScores,pathwayList,
     netTypes,outDir=outDir)
outDir <- paste(getwd(),'plots',sep=getFileSep())
if (!file.exists(outDir)) dir.create(outDir)
gmtFile <- EMap_input[[1]][1]
nodeAttrFile <- EMap_input[[1]][2]

# not run because requires Cytoscape to be installed and open
# viewSelectedFeaturesAsNetworks(gmtFile = gmtFile, nodeAttrFile = nodeAttrFile, 
#\t\tnetName='HighRisk')
}
