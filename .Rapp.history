integer(ints[,1])
int(ints[,1])
ints <- subset(ints, ints[,3]>=filterEdgeWt)
ints
nf<- sprintf("%s/1.%i.txt", netDir,nets$NET_ID[i])#
		if (verbose) print(basename(nf))#
		ints <- read.delim(nf,sep="\t",h=F,as.is=T)#
		ints <- subset(ints, ints[,3]>=filterEdgeWt)
ints[,1]
#' generate integrated PSN for TCGA breast cancer data#
rm(list=ls())#
require(netDx)#
#
# patients#
geneFile	<- "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/PSN/KIRC_oneNetPer/GENES.txt"#
# geneFile	<- "/home/ahmad/tcga_datasets/GBM/output/featSel_noMut_170213/rng7/SURVIVEYES/tmp/GENES.txt"#
# net names#
netFile		<- "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/PSN/KIRC_oneNetPer/NETWORKS.txt"#
# netFile		<- "/home/ahmad/tcga_datasets/GBM/output/featSel_noMut_170213/rng7/SURVIVEYES/tmp/NETWORKS.txt"#
# binary nets#
# binary nets#
# netDir		<- "/home/spai/tmp/TCGA_BRCA_freeze160826/LumA/tmp/INTERACTIONS"#
netDir		<- "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/PSN/KIRC_oneNetPer/INTERACTIONS"#
# we are going to take union of FS pathways for each class so we need#
# the pathway scores for each class#
pTFile_LumA	<- "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/PSN/KIRC_oneNetPer/SURVIVEYES_pathway_CV_score.txt"#
#
# pTFile_other<- "/home/ahmad/tcga_datasets/GBM/output/featSel_noMut_170213/rng7/SURVIVENO/GM_results/SURVIVENO_pathway_CV_score.txt"#
# where the integrated net will be written#
# outDir		<- "/home/spai/tmp/TCGA_BRCA_freeze160826/LumA/output_nets_score10"#
outDir		<- "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/PSN/KIRC_oneNetPer/output_nets_score10"#
#
cutoff <-10#
corrThresh <-0.7#
aggFun <- "MAX"#
#
# run for LumA#
cat("\nSURVIVEYES\n")#
pTally <- read.delim(pTFile_LumA,sep="\t",h=T,as.is=T)#
pTally <- subset(pTally, pTally[,2]>=cutoff)#
cat(sprintf("%i networks with score >=%i\n",nrow(pTally),cutoff))#
colnames(pTally) <- c("NETWORK","WEIGHT")#
aggNetFile <- netDx::writeWeightedNets(geneFile,netFile,netDir,#
				pTally,outDir,#
				filterEdgeWt=corrThresh,limitToTop=25,#
				writeAggNet=aggFun,verbose=TRUE)
aggNetFile
aggNetFile <- netDx::writeWeightedNets(geneFile,netFile,netDir,#
				pTally,outDir,#
				filterEdgeWt=corrThresh,limitToTop=50,#
				writeAggNet=aggFun,verbose=TRUE)
aggNetFile <- netDx::writeWeightedNets(geneFile,netFile,netDir,#
				pTally,outDir,#
				filterEdgeWt=corrThresh,limitToTop=30,#
				writeAggNet=aggFun,verbose=TRUE)
colnames(pTally) <- c("NETWORK","WEIGHT")#
aggNetFile <- netDx::writeWeightedNets(geneFile,netFile,netDir,#
				pTally,outDir,#
				filterEdgeWt=corrThresh,limitToTop=40,#
				writeAggNet=aggFun,verbose=TRUE)
aggNetFile <- netDx::writeWeightedNets(geneFile,netFile,netDir,#
				pTally,outDir,#
				filterEdgeWt=corrThresh,limitToTop=25,#
				writeAggNet=aggFun,verbose=TRUE)
aggNet<- read.delim(aggNetFile,sep="\t",h=T,as.is=T)[,1:3]#
colnames(aggNet) <- c("AliasA","AliasB","weight")#
aggNet[,3] <- 1-aggNet[,3]  # convert similarity to dissimilarity
aggNet[,3]
aggFun
aggNet<- read.delim(aggNetFile,sep="\t",h=T,as.is=T)[,1:3]#
colnames(aggNet)[3] <- "weight"
aggNet
aggNet[,3] <- 1-aggNet[,3]  # convert similarity to dissimilarity
aggNet
x <- compareShortestPath(aggNet, pheno)#
write.table(pheno,file=sprintf("%s/SURVIVEYES_pheno.txt",outDir),sep="\t",#
			col=T,row=F,quote=F)
x
pheno
x <- compareShortestPath(aggNet, pheno)
colnames(pTally) <- c("NETWORK","WEIGHT")#
aggNetFile <- netDx::writeWeightedNets(geneFile,netFile,netDir,#
				pTally,outDir,#
				filterEdgeWt=corrThresh,limitToTop=50,#
				writeAggNet=aggFun,verbose=TRUE)
aggNet<- read.delim(aggNetFile,sep="\t",h=T,as.is=T)[,1:3]#
colnames(aggNet) <- c("AliasA","AliasB","weight")#
aggNet[,3] <- 1-aggNet[,3]  # convert similarity to dissimilarity#
compareShortestPath(aggNet, pheno)
clinical_file <- "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/KIRC/features/KIRC_clinical_core.txt"#
survival_file <- "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/KIRC/features/KIRC_binary_survival.txt"#
#
pheno <- read.delim(clinical_file,sep="\t",h=T,as.is=T)#
colnames(pheno)[1] <- "ID"#
#
#======transform clinical data=========#
pheno$grade <- as.vector(pheno$grade)#
pheno$grade[pheno$grade=="G1"] <- "G2"#
pheno$grade[pheno$grade=="GX"] <- "G2"#
pheno$grade <- as.factor(pheno$grade)#
pheno <- pheno[, -which(colnames(pheno)=="gender")]#
surv <- read.delim(survival_file,sep="\t",h=T,as.is=T)#
colnames(surv)[1:2] <- c("ID","STATUS_INT")#
survStr <- rep(NA,nrow(surv))#
survStr[surv$STATUS_INT<1] <- "SURVIVENO"#
survStr[surv$STATUS_INT>0] <- "SURVIVEYES"#
surv$STATUS <- survStr#
pheno$X <- NULL#
pheno <- merge(x=pheno,y=surv,by="ID")
pheno
compareShortestPath(aggNet, pheno)
x
require(igraph)
install.packages('igraph')
x <- compareShortestPath(aggNet, pheno)
x
aggNetFile <- netDx::writeWeightedNets(geneFile,netFile,netDir,#
				pTally,outDir,#
				filterEdgeWt=corrThresh,limitToTop=25,#
				writeAggNet=aggFun,verbose=TRUE)
clinical_file <- "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/KIRC/features/KIRC_clinical_core.txt"#
survival_file <- "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/KIRC/features/KIRC_binary_survival.txt"#
# compute Dijkstra with unpruned net#
aggNet<- read.delim(aggNetFile,sep="\t",h=T,as.is=T)[,1:3]#
colnames(aggNet) <- c("AliasA","AliasB","weight")#
aggNet[,3] <- 1-aggNet[,3]  # convert similarity to dissimilarity
# need pheno table for class assignment.#
pheno <- read.delim(clinical_file,sep="\t",h=T,as.is=T)#
colnames(pheno)[1] <- "ID"#
surv <- read.delim(survival_file,sep="\t",h=T,as.is=T)#
colnames(surv)[1:2] <- c("ID","STATUS_INT")#
survStr <- rep(NA,nrow(surv))#
survStr[surv$STATUS_INT<1] <- "SURVIVENO"#
survStr[surv$STATUS_INT>0] <- "SURVIVEYES"#
surv$STATUS <- survStr#
pheno <- merge(x=pheno,y=surv,by="ID")#
#
pheno$X <- NULL
olnames(pheno)[which(colnames(pheno)=="STATUS")] <- "GROUP"#
cat("\n\n---------------------\n")#
cat(sprintf("Dijkstra distances: %s: %s :%s\n",#
	curSet,aggFun,simMode))#
cat("---------------------\n")#
x <- compareShortestPath(aggNet, pheno,verbose=F)
colnames(pheno)[which(colnames(pheno)=="STATUS")] <- "GROUP"#
cyrSet <- "KIRC"#
cat("\n\n---------------------\n")#
cat(sprintf("Dijkstra distances: %s: %s :%s\n",#
	curSet,aggFun,simMode))
colnames(pheno)[which(colnames(pheno)=="STATUS")] <- "GROUP"#
curSet <- "KIRC"#
cat("\n\n---------------------\n")#
cat(sprintf("Dijkstra distances: %s: %s :%s\n",#
	curSet,aggFun,simMode))
require(httr)
diamonds
import(ggplot2)
(ggplot2)require
require(ggplot2)
diamonds
ggplot(diamonds) + gemon_density()
ggplot(diamonds) + gemo_density()
ggplot(diamonds) + geom_density()
carat
load("/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/oneNetPer/GBM/GBM_oneNetPer_FeatSel_results.Rdata")
phen
pheno
ls()
#' feature selection for GBM from PanCancer survival dataset#
#' 10-fold CV predictor design with clinical and mRNA data#
rm(list=ls())#
#
numCores <- 8L#
GMmemory <- 4L#
trainProp <- 0.8#
cutoff <- 9#
#
# inDir <- "/mnt/data2/BaderLab/PanCancer_GBM/input"#
inDir <- "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/GBM/features"#
outRoot <-"/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/GBM"#
#
dt <- format(Sys.Date(),"%y%m%d")#
megaDir <- sprintf("%s/featSel_noMut_%s",outRoot,dt)#
# ----------------------------------------------------------------#
# helper functions#
#
# normalized difference#
# x is vector of values, one per patient (e.g. ages)#
normDiff <- function(x) {#
    #if (nrow(x)>=1) x <- x[1,]#
    nm <- colnames(x)#
    x <- as.numeric(x)#
    n <- length(x)#
    rngX  <- max(x,na.rm=T)-min(x,na.rm=T)#
#
    out <- matrix(NA,nrow=n,ncol=n);#
    # weight between i and j is#
    # wt(i,j) = 1 - (abs(x[i]-x[j])/(max(x)-min(x)))#
    for (j in 1:n) out[,j] <- 1-(abs((x-x[j])/rngX))#
    rownames(out) <- nm; colnames(out)<- nm#
    out#
}#
#
# -----------------------------------------------------------#
# process input#
inFiles <- list(#
	clinical=sprintf("%s/GBM_clinical_core.txt",inDir),#
	survival=sprintf("%s/GBM_binary_survival.txt",inDir),#
	rna=sprintf("%s/GBM_mRNA_core.txt",inDir)#
)#
#
pheno <- read.delim(inFiles$clinical,sep="\t",h=T,as.is=T)#
colnames(pheno)[1] <- "ID"#
#
surv <- read.delim(inFiles$survival,sep="\t",h=T,as.is=T)#
colnames(surv)[1:2] <- c("ID","STATUS_INT")#
survStr <- rep(NA,nrow(surv))#
survStr[surv$STATUS_INT<1] <- "SURVIVENO"#
survStr[surv$STATUS_INT>0] <- "SURVIVEYES"#
surv$STATUS <- survStr#
pheno <- merge(x=pheno,y=surv,by="ID")#
pheno$X <- NULL#
pheno$gender <- ifelse(pheno$gender=="FEMALE",1, 0)#
pheno_nosurv <- pheno[1:4]
ggplot(pheno, aes(age)) + geom_density()
ggplot(pheno, aes(status_int)) + geom_density()
ggplot(pheno, aes(STATUS_INT)) + geom_density()
ggplot(pheno, aes(age)) + geom_density()
pheno
surv_time <- read.delim("/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/GBM/features/GBM_OS_core.txt",sep="\t",h=T,as.is=T)
surv_time
surv_time$X
surv_time$X <- NULL
surv_time
nrows(suv)
nrows(sruv)
nrow(surv)
zurv
surv
nrows(surv_time)
nrow(surv_time)
surv_time
surv_time$OS_vital_status
which(surv_time$OS_vital_status == 1)
surv_time$OS_OS[which(surv_time$OS_vital_status == 1)]
surv_time$OS_OS
bps <- list(SURVYES = high_surv, SURVNO = low_surv)
high_surv <- surv_time$OS_OS[which(surv_time$OS_vital_status == 1)]#
low_surv <- surv_time$OS_OS[which(surv_time$OS_vital_status == 0)]
bps <- list(SURVYES = high_surv, SURVNO = low_surv)
bps
boxplots(bps)
boxplot(bps)
bps <- list(SURVNO = low_surv, SURVYES = high_surv)#
#
boxplots(bp)
boxplot(bp)
boxplot(bps)
boxplot(bp, ylab = 'survival time')
boxplot(bps, ylab = 'survival time')
boxplot(bps, ylab = 'survival time', cex.axis = 1.5)
boxplot(bps, ylab = 'SURVIVAL TIME', cex.axis = 1.5)
boxplot(bps, ylab = 'SURVIVAL TIME', cex.axis = 1.5, title = "Survival times across survival status")
title = "Survival times across survival status")#
)
title()"Survival times across survival status")
title("Survival times across survival status")
title("Survival times across survival status for GBM patients")
boxplot(bps, ylab = 'SURVIVAL TIME', cex.axis = 1.5, title = "Survival times across survival status")
title("Survival times across survival status for GBM patients")
wilcox.test(high_surv, low_surv)
wilcox.test(high_surv, low_surv)$p.value
input_files = (GBM = "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/GBM/features/GBM_OS_core.txt",#
  LUSC= "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/LUSC/features/LUSC_OS_core.txt",#
  KIRC="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/KIRC/features/KIRC_OS_core.txt",#
  OV="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/OV/features/OV_OS_core.txt"#
  )
input_files <- list(GBM = "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/GBM/features/GBM_OS_core.txt",#
  LUSC= "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/LUSC/features/LUSC_OS_core.txt",#
  KIRC="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/KIRC/features/KIRC_OS_core.txt",#
  OV="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/OV/features/OV_OS_core.txt"#
  )
names(input_files)
input_files
input_files[['OV']]
input_files <- list(GBM = "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/GBM/features/GBM_OS_core.txt",#
  LUSC= "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/LUSC/features/LUSC_OS_core.txt",#
  KIRC="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/KIRC/features/KIRC_OS_core.txt",#
  OV="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/OV/features/OV_OS_core.txt"#
  )#
pdf("survival_density_plots.pdf")#
par(mfrow = c(2,2))#
for(cur_dir in names(input_files)){#
#
  surv_time <- read.delim(input_files[[cur_dir]],sep="\t",h=T,as.is=T)#
#
  high_surv <- surv_time$OS_OS[which(surv_time$OS_vital_status == 1)]#
  low_surv <- surv_time$OS_OS[which(surv_time$OS_vital_status == 0)]#
  p_val <- wilcox.test(high_surv, low_surv)$p.values#
#
  bp <- list(SURVNO = low_surv, SURVYES = high_surv)#
#
  boxplot(bps, ylab = 'SURVIVAL TIME')#
  title(sprintf("Survival times across survival status for %s pantients", cur_dir))#
}#
dev.off()
input_files <- list(GBM = "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/GBM/features/GBM_OS_core.txt",#
  LUSC= "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/LUSC/features/LUSC_OS_core.txt",#
  KIRC="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/KIRC/features/KIRC_OS_core.txt",#
  OV="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/OV/features/OV_OS_core.txt"#
  )#
pdf("/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/survival_density_plots.pdf")#
par(mfrow = c(2,2))#
for(cur_dir in names(input_files)){#
#
  surv_time <- read.delim(input_files[[cur_dir]],sep="\t",h=T,as.is=T)#
#
  high_surv <- surv_time$OS_OS[which(surv_time$OS_vital_status == 1)]#
  low_surv <- surv_time$OS_OS[which(surv_time$OS_vital_status == 0)]#
  p_val <- wilcox.test(high_surv, low_surv)$p.values#
#
  bp <- list(SURVNO = low_surv, SURVYES = high_surv)#
#
  boxplot(bps, ylab = 'SURVIVAL TIME')#
  title(sprintf("Survival times across survival status for %s pantients", cur_dir))#
}#
dev.off()
rm(list=ls())#
#
input_files <- list(GBM = "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/GBM/features/GBM_OS_core.txt",#
  LUSC= "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/LUSC/features/LUSC_OS_core.txt",#
  KIRC="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/KIRC/features/KIRC_OS_core.txt",#
  OV="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/OV/features/OV_OS_core.txt"#
  )#
pdf("/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/survival_density_plots.pdf")#
par(mfrow = c(2,2))#
for(cur_dir in names(input_files)){#
#
  surv_time <- read.delim(input_files[[cur_dir]],sep="\t",h=T,as.is=T)#
#
  high_surv <- surv_time$OS_OS[which(surv_time$OS_vital_status == 1)]#
  low_surv <- surv_time$OS_OS[which(surv_time$OS_vital_status == 0)]#
  p_val <- wilcox.test(high_surv, low_surv)$p.values#
#
  bp <- list(SURVNO = low_surv, SURVYES = high_surv)#
#
  boxplot(bps, ylab = 'SURVIVAL TIME')#
  title(sprintf("Survival times across survival \n status for %s pantients", cur_dir))#
}#
dev.off()
rm(list=ls())#
#
input_files <- list(GBM = "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/GBM/features/GBM_OS_core.txt",#
  LUSC= "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/LUSC/features/LUSC_OS_core.txt",#
  KIRC="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/KIRC/features/KIRC_OS_core.txt",#
  OV="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/OV/features/OV_OS_core.txt"#
  )#
pdf("/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/survival_density_plots.pdf")#
par(mfrow = c(2,2))#
for(cur_dir in names(input_files)){#
#
  surv_time <- read.delim(input_files[[cur_dir]],sep="\t",h=T,as.is=T)#
#
  high_surv <- surv_time$OS_OS[which(surv_time$OS_vital_status == 1)]#
  low_surv <- surv_time$OS_OS[which(surv_time$OS_vital_status == 0)]#
  p_val <- wilcox.test(high_surv, low_surv)$p.values#
#
  bp <- list(SURVNO = low_surv, SURVYES = high_surv)#
#
  boxplot(bp, ylab = 'SURVIVAL TIME')#
  title(sprintf("Survival times across survival \n status for %s pantients", cur_dir))#
}#
dev.off()
rm(list=ls())#
#
input_files <- list(GBM = "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/GBM/features/GBM_OS_core.txt",#
  LUSC= "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/LUSC/features/LUSC_OS_core.txt",#
  KIRC="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/KIRC/features/KIRC_OS_core.txt",#
  OV="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/OV/features/OV_OS_core.txt"#
  )#
pdf("/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/survival_density_plots.pdf")#
par(mfrow = c(2,2), mar(c(2,2,1,1)))#
for(cur_dir in names(input_files)){#
#
  surv_time <- read.delim(input_files[[cur_dir]],sep="\t",h=T,as.is=T)#
#
  high_surv <- surv_time$OS_OS[which(surv_time$OS_vital_status == 1)]#
  low_surv <- surv_time$OS_OS[which(surv_time$OS_vital_status == 0)]#
  p_val <- wilcox.test(high_surv, low_surv)$p.values#
#
  bp <- list(SURVNO = low_surv, SURVYES = high_surv)#
#
  boxplot(bp, ylab = 'SURVIVAL TIME')#
  title(sprintf("Survival times across survival \n status for %s pantients", cur_dir))#
}#
dev.off()
rm(list=ls())#
#
input_files <- list(GBM = "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/GBM/features/GBM_OS_core.txt",#
  LUSC= "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/LUSC/features/LUSC_OS_core.txt",#
  KIRC="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/KIRC/features/KIRC_OS_core.txt",#
  OV="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/OV/features/OV_OS_core.txt"#
  )#
pdf("/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/survival_density_plots.pdf")#
par(mfrow = c(2,2))#
for(cur_dir in names(input_files)){#
#
  surv_time <- read.delim(input_files[[cur_dir]],sep="\t",h=T,as.is=T)#
#
  high_surv <- surv_time$OS_OS[which(surv_time$OS_vital_status == 1)]#
  low_surv <- surv_time$OS_OS[which(surv_time$OS_vital_status == 0)]#
  p_val <- wilcox.test(high_surv, low_surv)$p.values#
#
  bp <- list(SURVNO = low_surv, SURVYES = high_surv)#
#
  boxplot(bp, ylab = 'SURVIVAL TIME')#
  title(sprintf("Survival times across survival \n status for %s pantients", cur_dir))#
}#
dev.off()
rm(list=ls())#
#
input_files <- list(GBM = "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/GBM/features/GBM_OS_core.txt",#
  LUSC= "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/LUSC/features/LUSC_OS_core.txt",#
  KIRC="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/KIRC/features/KIRC_OS_core.txt",#
  OV="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/OV/features/OV_OS_core.txt"#
  )#
pdf("/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/survival_density_plots.pdf")#
par(mfrow = c(2,2))#
for(cur_dir in names(input_files)){#
#
  surv_time <- read.delim(input_files[[cur_dir]],sep="\t",h=T,as.is=T)#
#
  high_surv <- surv_time$OS_OS[which(surv_time$OS_vital_status == 1)]#
  low_surv <- surv_time$OS_OS[which(surv_time$OS_vital_status == 0)]#
  p_val <- wilcox.test(high_surv, low_surv)$p.values#
#
  bp <- list(SURVNO = low_surv, SURVYES = high_surv)#
#
  boxplot(bp, ylab = 'SURVIVAL TIME')#
  title(sprintf("Survival times across survival \n status for %s pantients \n p-val = %s", cur_dir, toString(p_val)))#
#
}#
dev.off()
p_val
p_val <- wilcox.test(high_surv, low_surv)$p.value
p_val
toString(p_val)
rm(list=ls())#
#
input_files <- list(GBM = "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/GBM/features/GBM_OS_core.txt",#
  LUSC= "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/LUSC/features/LUSC_OS_core.txt",#
  KIRC="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/KIRC/features/KIRC_OS_core.txt",#
  OV="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/OV/features/OV_OS_core.txt"#
  )#
pdf("/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/survival_density_plots.pdf")#
par(mfrow = c(2,2))#
for(cur_dir in names(input_files)){#
#
  surv_time <- read.delim(input_files[[cur_dir]],sep="\t",h=T,as.is=T)#
#
  high_surv <- surv_time$OS_OS[which(surv_time$OS_vital_status == 1)]#
  low_surv <- surv_time$OS_OS[which(surv_time$OS_vital_status == 0)]#
  p_val <- wilcox.test(high_surv, low_surv)$p.value#
#
  bp <- list(SURVNO = low_surv, SURVYES = high_surv)#
#
  boxplot(bp, ylab = 'SURVIVAL TIME')#
  title(sprintf("Survival times across survival \n status for %s pantients \n p-val = %s", cur_dir, toString(p_val)))#
#
}#
dev.off()
rm(list=ls())#
#
input_files <- list(GBM = "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/GBM/features/GBM_OS_core.txt",#
  LUSC= "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/LUSC/features/LUSC_OS_core.txt",#
  KIRC="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/KIRC/features/KIRC_OS_core.txt",#
  OV="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/OV/features/OV_OS_core.txt"#
  )#
pdf("/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/survival_density_plots.pdf")#
par(mfrow = c(2,2))#
for(cur_dir in names(input_files)){#
#
  surv_time <- read.delim(input_files[[cur_dir]],sep="\t",h=T,as.is=T)#
#
  high_surv <- surv_time$OS_OS[which(surv_time$OS_vital_status == 1)]#
  low_surv <- surv_time$OS_OS[which(surv_time$OS_vital_status == 0)]#
  p_val <- wilcox.test(high_surv, low_surv)$p.value#
#
  bp <- list(SURVNO = low_surv, SURVYES = high_surv)#
#
  boxplot(bp, ylab = 'SURVIVAL TIME')#
  title(sprintf("Survival times across survival \n status for %s pantients \n p-val = %s", cur_dir, toString(sprintf("%1.1e",pval))))#
#
}#
dev.off()
rm(list=ls())#
#
input_files <- list(GBM = "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/GBM/features/GBM_OS_core.txt",#
  LUSC= "/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/LUSC/features/LUSC_OS_core.txt",#
  KIRC="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/KIRC/features/KIRC_OS_core.txt",#
  OV="/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/OV/features/OV_OS_core.txt"#
  )#
pdf("/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/survival_density_plots.pdf")#
par(mfrow = c(2,2))#
for(cur_dir in names(input_files)){#
#
  surv_time <- read.delim(input_files[[cur_dir]],sep="\t",h=T,as.is=T)#
#
  high_surv <- surv_time$OS_OS[which(surv_time$OS_vital_status == 1)]#
  low_surv <- surv_time$OS_OS[which(surv_time$OS_vital_status == 0)]#
  p_val <- wilcox.test(high_surv, low_surv)$p.value#
#
  bp <- list(SURVNO = low_surv, SURVYES = high_surv)#
#
  boxplot(bp, ylab = 'SURVIVAL TIME')#
  title(sprintf("Survival times across survival \n status for %s pantients \n p-val = %s", cur_dir, toString(sprintf("%1.1e",p_val))))#
#
}#
dev.off()
"las1" %in% "las1.1"
setwd('/Users/ahmadshah/Desktop/CSC2515/patient_networks/tcga_pancancer/miss_dat')
load('all_perf_missingness.RData')
ls()
all_f1
all_f1[,1]
tester <- all_acc#
#
mu <- colMeans(tester,na.rm=TRUE)#
sem <- sapply(1:ncol(tester),function(x)#
	sd(tester[,x],na.rm=TRUE)/sqrt(nrow(tester)))
plot(1:length(mu),mu,xlab="Data combinations",ylim=c(0.4,0.85),#
		type='p',bty='n',ylab="F1 SCORE (mean+/-SEM)",xaxt='n',#
		las=1,pch=16,cex=1.5,cex.axis=1.4)
mu
sem
plot(mu)
plot(1:length(mu), mu)
plot(1:length(mu), mu)
plot(1:length(mu),mu,xlab="Data combinations",#
		type='p',bty='n',ylab="accuracy (mean+/-SEM)",xaxt='n',#
		las=1,pch=16,cex=1.5,cex.axis=1.4)#
	title(curSet)#
#
	axis(1,at=1:length(mu), labels=colnames(val),cex.axis=1.4)#
	segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
	abline(h=0.5,col='red',lty=1,lwd=2)#
	abline(h=0.7,col='red',lty=3,lwd=2)#
	abline(v=vLines[[curSet]],lty=1,lwd=2)
vLines <- list(#
	GBM=c(5.5,9.5),#
	KIRC=c(6.5,11.5),#
	LUSC=c(5.5,9.5),#
	OV=c(6.5,11.5)#
)
plot(1:length(mu),mu,xlab="Data combinations",#
		type='p',bty='n',ylab="accuracy (mean+/-SEM)",xaxt='n',#
		las=1,pch=16,cex=1.5,cex.axis=1.4)#
	title(curSet)#
curSet <- 'KIRC'#
	axis(1,at=1:length(mu), labels=colnames(val),cex.axis=1.4)#
	# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
	segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3)#
	abline(h=0.5,col='red',lty=1,lwd=2)#
	abline(h=0.7,col='red',lty=3,lwd=2)#
	abline(v=vLines[[curSet]],lty=1,lwd=2)
sem
plot(mu)
plot(1:length(mu),mu,xlab="Data combinations",#
		type='p',bty='n',ylab="accuracy (mean+/-SEM)",xaxt='n',#
		las=1,pch=16,cex=1.5,cex.axis=1.4)#
	title(curSet)#
curSet <- 'KIRC'#
	axis(1,at=1:length(mu), labels=colnames(val),cex.axis=1.4)
plot(1:length(mu),mu,xlab="Data combinations",#
		type='p',bty='n',ylab="accuracy (mean+/-SEM)",xaxt='n',#
		las=1,pch=16,cex=1.5,cex.axis=1.4)#
	title(curSet)#
curSet <- 'KIRC'#
	axis(1,at=1:length(mu), labels=colnames(val),cex.axis=1.4)
plot(1:length(mu),mu,xlab="Data combinations",#
		type='p',ylab="accuracy (mean+/-SEM)",#
		las=1,pch=16,cex=1.5,cex.axis=1.4)
plot(1:length(mu),mu,xlab="Data combinations",#
		type='p',ylab="accuracy (mean+/-SEM)",#
		las=1,pch=16,cex=1.5,cex.axis=1.4)
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3)#
	abline(h=0.5,col='red',lty=1,lwd=2)#
	abline(h=0.7,col='red',lty=3,lwd=2)#
	abline(v=vLines[[curSet]],lty=1,lwd=2)
vlines[[curset]]
vLines[[curset]]
vLines[[curSet]]
mu
sem
plot(1:length(mu),mu,xlab="Data combinations",#
		type='p',ylab="accuracy (mean+/-SEM)",#
		las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(0,100))
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3)#
	abline(h=0.5,col='red',lty=1,lwd=2)#
	abline(h=0.7,col='red',lty=3,lwd=2)#
	abline(v=vLines[[curSet]],lty=1,lwd=2)
plot(1:length(mu),mu,xlab="Data combinations",#
		type='p',ylab="accuracy (mean+/-SEM)",#
		las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(0,70))#
	# plot(1:length(mu),mu,xlab="Data combinations",#
	# 	type='p',bty='n',ylab="accuracy (mean+/-SEM)",xaxt='n',#
	# 	las=1,pch=16,cex=1.5,cex.axis=1.4)#
	title(curSet)#
curSet <- 'KIRC'#
	# axis(1,at=1:length(mu), labels=colnames(val),cex.axis=1.4)#
	# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
	segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3)
plot(1:length(mu),mu,xlab="Data combinations",#
		type='p',ylab="accuracy (mean+/-SEM)",#
		las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70))#
	# plot(1:length(mu),mu,xlab="Data combinations",#
	# 	type='p',bty='n',ylab="accuracy (mean+/-SEM)",xaxt='n',#
	# 	las=1,pch=16,cex=1.5,cex.axis=1.4)#
	title(curSet)#
curSet <- 'KIRC'#
	# axis(1,at=1:length(mu), labels=colnames(val),cex.axis=1.4)#
	# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
	segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3)
plot(names(mu),mu,xlab="percent data missing",#
		type='p',ylab="accuracy (mean+/-SEM)",#
		las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70))#
	# plot(1:length(mu),mu,xlab="Data combinations",#
	# 	type='p',bty='n',ylab="accuracy (mean+/-SEM)",xaxt='n',#
	# 	las=1,pch=16,cex=1.5,cex.axis=1.4)#
	title(curSet)#
curSet <- 'KIRC'#
	# axis(1,at=1:length(mu), labels=colnames(val),cex.axis=1.4)#
	# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
	segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3)
nmaes(mu)
names(mu)
plot(mu,xlab="percent data missing",#
		type='p',ylab="accuracy (mean+/-SEM)",#
		las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70))
mu
plot(1:length(mu),mu,xlab="percent data missing",#
		type='p',ylab="accuracy (mean+/-SEM)",#
		las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n')#
	# plot(1:length(mu),mu,xlab="Data combinations",#
	# 	type='p',bty='n',ylab="accuracy (mean+/-SEM)",xaxt='n',#
	# 	las=1,pch=16,cex=1.5,cex.axis=1.4)#
	title(curSet)#
	curSet <- 'KIRC'#
	axis(1,at=1:length(mu), labels=colnames(val),cex.axis=1.4)
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n')#
# plot(1:length(mu),mu,xlab="Data combinations",#
# 	type='p',bty='n',ylab="accuracy (mean+/-SEM)",xaxt='n',#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4)#
title(curSet)#
curSet <- 'KIRC'#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3)#
abline(h=0.5,col='red',lty=1,lwd=2)#
abline(h=0.7,col='red',lty=3,lwd=2)#
abline(v=vLines[[curSet]],lty=1,lwd=2)
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n')#
# plot(1:length(mu),mu,xlab="Data combinations",#
# 	type='p',bty='n',ylab="accuracy (mean+/-SEM)",xaxt='n',#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4)#
title(curSet)#
curSet <- 'KIRC'#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3)
cols <- brewer.pal(n=length(combSet),name="Blues")#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# plot(1:length(mu),mu,xlab="Data combinations",#
# 	type='p',bty='n',ylab="accuracy (mean+/-SEM)",xaxt='n',#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4)#
title(curSet)#
curSet <- 'KIRC'#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3)
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# plot(1:length(mu),mu,xlab="Data combinations",#
# 	type='p',bty='n',ylab="accuracy (mean+/-SEM)",xaxt='n',#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4)#
title(curSet)#
curSet <- 'KIRC'#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)
require(RColorBrewer)
cols <- brewer.pal(n=length(combSet)+1,name="Blues")
cols
cols <- cols[-1]
cols
# cols <- brewer.pal(n=length(combSet),name="Blues")#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# plot(1:length(mu),mu,xlab="Data combinations",#
# 	type='p',bty='n',ylab="accuracy (mean+/-SEM)",xaxt='n',#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4)#
title(curSet)#
curSet <- 'KIRC'#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)
cols
# cols <- brewer.pal(n=length(combSet),name="Blues")#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# plot(1:length(mu),mu,xlab="Data combinations",#
# 	type='p',bty='n',ylab="accuracy (mean+/-SEM)",xaxt='n',#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4)#
title(curSet)#
curSet <- 'KIRC'#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)
cols <- brewer.pal(n=length(combSet)+2,name="Blues")#
cols <- cols[-c(1,2)]
cols
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# plot(1:length(mu),mu,xlab="Data combinations",#
# 	type='p',bty='n',ylab="accuracy (mean+/-SEM)",xaxt='n',#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4)#
title(curSet)#
curSet <- 'KIRC'#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)
all_tot
pdf(file="/home/netdx/BaderLab/PanCancer_KIRC/output/missingness/KIRC_RNA_missing_perf.pdf", height = 10, width = 10)#
par(mfrow=c(2,2),mar=c(9,6,2,2),las=2,cex.axis=1.3,cex.lab=1.7,cex.main=2)#
#===============================================================================#
mu <- colMeans(all_acc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_acc),function(x)#
	sd(all_acc[,x],na.rm=TRUE)/sqrt(nrow(all_acc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('Accuracy')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_f1,na.rm=TRUE)#
sem <- sapply(1:ncol(all_f1),function(x)#
	sd(all_f1[,x],na.rm=TRUE)/sqrt(nrow(all_f1)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="F1 score (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('F1')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_ppv,na.rm=TRUE)#
sem <- sapply(1:ncol(all_ppv,function(x)#
	sd(all_ppv[,x],na.rm=TRUE)/sqrt(nrow(all_ppv)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="PPV (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('PPV')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
# mu <- colMeans(all_tot,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_tot,function(x)#
# 	sd(all_tot[,x],na.rm=TRUE)/sqrt(nrow(all_tot)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="PPV (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Total classified')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# #=============================================================================#
mu <- colMeans(all_overall_acc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_overall_acc,function(x)#
	sd(all_overall_acc[,x],na.rm=TRUE)/sqrt(nrow(all_overall_acc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="Overall accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('Overall accuracy')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
#
dev.off()
mu <- colMeans(all_overall_acc,na.rm=TRUE)
mu
pdf(file="/home/netdx/BaderLab/PanCancer_KIRC/output/missingness/KIRC_RNA_missing_perf.pdf", height = 10, width = 10)#
par(mfrow=c(2,2),mar=c(9,6,2,2),las=2,cex.axis=1.3,cex.lab=1.7,cex.main=2)#
#===============================================================================#
mu <- colMeans(all_acc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_acc),function(x)#
	sd(all_acc[,x],na.rm=TRUE)/sqrt(nrow(all_acc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('Accuracy')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_f1,na.rm=TRUE)#
sem <- sapply(1:ncol(all_f1),function(x)#
	sd(all_f1[,x],na.rm=TRUE)/sqrt(nrow(all_f1)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="F1 score (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('F1')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_ppv,na.rm=TRUE)#
sem <- sapply(1:ncol(all_ppv,function(x)#
	sd(all_ppv[,x],na.rm=TRUE)/sqrt(nrow(all_ppv)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="PPV (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('PPV')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
# mu <- colMeans(all_tot,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_tot,function(x)#
# 	sd(all_tot[,x],na.rm=TRUE)/sqrt(nrow(all_tot)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="PPV (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Total classified')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# # #=============================================================================#
# mu <- colMeans(all_overall_acc,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_overall_acc,function(x)#
# 	sd(all_overall_acc[,x],na.rm=TRUE)/sqrt(nrow(all_overall_acc)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="Overall accuracy (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Overall accuracy')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# #===============================================================================#
#
dev.off()
pdf(file="KIRC_RNA_missing_perf.pdf", height = 10, width = 10)#
par(mfrow=c(2,2),mar=c(9,6,2,2),las=2,cex.axis=1.3,cex.lab=1.7,cex.main=2)#
#===============================================================================#
mu <- colMeans(all_acc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_acc),function(x)#
	sd(all_acc[,x],na.rm=TRUE)/sqrt(nrow(all_acc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('Accuracy')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_f1,na.rm=TRUE)#
sem <- sapply(1:ncol(all_f1),function(x)#
	sd(all_f1[,x],na.rm=TRUE)/sqrt(nrow(all_f1)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="F1 score (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('F1')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_ppv,na.rm=TRUE)#
sem <- sapply(1:ncol(all_ppv,function(x)#
	sd(all_ppv[,x],na.rm=TRUE)/sqrt(nrow(all_ppv)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="PPV (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('PPV')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
# mu <- colMeans(all_tot,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_tot,function(x)#
# 	sd(all_tot[,x],na.rm=TRUE)/sqrt(nrow(all_tot)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="PPV (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Total classified')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# # #=============================================================================#
# mu <- colMeans(all_overall_acc,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_overall_acc,function(x)#
# 	sd(all_overall_acc[,x],na.rm=TRUE)/sqrt(nrow(all_overall_acc)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="Overall accuracy (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Overall accuracy')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# #===============================================================================#
#
dev.off()
pdf(file="KIRC_RNA_missing_perf.pdf", height = 10, width = 10)#
par(mar=c(9,6,2,2),las=2,cex.axis=1.3,cex.lab=1.7,cex.main=2)#
#mfrow=c(2,2)#
#===============================================================================#
mu <- colMeans(all_acc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_acc),function(x)#
	sd(all_acc[,x],na.rm=TRUE)/sqrt(nrow(all_acc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('Accuracy')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_f1,na.rm=TRUE)#
sem <- sapply(1:ncol(all_f1),function(x)#
	sd(all_f1[,x],na.rm=TRUE)/sqrt(nrow(all_f1)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="F1 score (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('F1')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_ppv,na.rm=TRUE)#
sem <- sapply(1:ncol(all_ppv,function(x)#
	sd(all_ppv[,x],na.rm=TRUE)/sqrt(nrow(all_ppv)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="PPV (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('PPV')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
# mu <- colMeans(all_tot,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_tot,function(x)#
# 	sd(all_tot[,x],na.rm=TRUE)/sqrt(nrow(all_tot)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="PPV (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Total classified')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# # #=============================================================================#
# mu <- colMeans(all_overall_acc,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_overall_acc,function(x)#
# 	sd(all_overall_acc[,x],na.rm=TRUE)/sqrt(nrow(all_overall_acc)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="Overall accuracy (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Overall accuracy')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# #===============================================================================#
#
dev.off()
load('all_perf_missingness.RData')
mu <- colMeans(all_ppv,na.rm=TRUE)#
sem <- sapply(1:ncol(all_ppv,function(x)#
	sd(all_ppv[,x],na.rm=TRUE)/sqrt(nrow(all_ppv)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="PPV (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('PPV')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)
mu
sem
sem <- sapply(1:ncol(all_ppv,function(x)#
	sd(all_ppv[,x],na.rm=TRUE)/sqrt(nrow(all_ppv)))
)
mu <- colMeans(all_f1,na.rm=TRUE)#
sem <- sapply(1:ncol(all_f1),function(x)#
	sd(all_f1[,x],na.rm=TRUE)/sqrt(nrow(all_f1)))
sem
mu <- colMeans(all_ppv,na.rm=TRUE)#
sem <- sapply(1:ncol(all_ppv),function(x)#
	sd(all_ppv[,x],na.rm=TRUE)/sqrt(nrow(all_ppv)))
sem
mu
cols <- brewer.pal(n=length(combSet)+2,name="Blues")#
cols <- cols[-c(1,2)]#
pdf(file="KIRC_RNA_missing_perf.pdf", height = 10, width = 10)#
par(mar=c(9,6,2,2),las=2,cex.axis=1.3,cex.lab=1.7,cex.main=2)#
#mfrow=c(2,2)#
#===============================================================================#
mu <- colMeans(all_acc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_acc),function(x)#
	sd(all_acc[,x],na.rm=TRUE)/sqrt(nrow(all_acc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('Accuracy')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_f1,na.rm=TRUE)#
sem <- sapply(1:ncol(all_f1),function(x)#
	sd(all_f1[,x],na.rm=TRUE)/sqrt(nrow(all_f1)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="F1 score (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('F1')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_ppv,na.rm=TRUE)#
sem <- sapply(1:ncol(all_ppv),function(x)#
	sd(all_ppv[,x],na.rm=TRUE)/sqrt(nrow(all_ppv)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="PPV (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('PPV')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
# mu <- colMeans(all_tot,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_tot,function(x)#
# 	sd(all_tot[,x],na.rm=TRUE)/sqrt(nrow(all_tot)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="PPV (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Total classified')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# # #=============================================================================#
# mu <- colMeans(all_overall_acc,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_overall_acc,function(x)#
# 	sd(all_overall_acc[,x],na.rm=TRUE)/sqrt(nrow(all_overall_acc)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="Overall accuracy (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Overall accuracy')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# #===============================================================================#
#
dev.off()
mu <- colMeans(all_roc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_roc),function(x)#
	sd(all_roc[,x],na.rm=TRUE)/sqrt(nrow(all_roc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="PPV (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('PPV')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)
#===============================================================================#
mu <- colMeans(all_ppv,na.rm=TRUE)#
sem <- sapply(1:ncol(all_ppv),function(x)#
	sd(all_ppv[,x],na.rm=TRUE)/sqrt(nrow(all_ppv)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="PPV (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, xaxt = 'n', col = cols)#
title('PPV')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)
#===============================================================================#
mu <- colMeans(all_roc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_roc),function(x)#
	sd(all_roc[,x],na.rm=TRUE)/sqrt(nrow(all_roc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="PPV (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('PPV')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)
#===============================================================================#
mu <- colMeans(all_roc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_roc),function(x)#
	sd(all_roc[,x],na.rm=TRUE)/sqrt(nrow(all_roc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="PPV (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, xaxt = 'n', col = cols)#
title('PPV')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)
mu <- colMeans(all_roc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_roc),function(x)#
	sd(all_roc[,x],na.rm=TRUE)/sqrt(nrow(all_roc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="AUCROC (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, xaxt = 'n', col = cols)#
title('Mean AUCROC')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)
pdf(file="KIRC_RNA_missing_perf.pdf", height = 10, width = 10)#
par(mfrow=c(2,2), mar=c(9,6,2,2),las=2,cex.axis=1.3,cex.lab=1.7,cex.main=2)#
#mfrow=c(2,2)#
#===============================================================================#
mu <- colMeans(all_acc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_acc),function(x)#
	sd(all_acc[,x],na.rm=TRUE)/sqrt(nrow(all_acc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('Accuracy')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_f1,na.rm=TRUE)#
sem <- sapply(1:ncol(all_f1),function(x)#
	sd(all_f1[,x],na.rm=TRUE)/sqrt(nrow(all_f1)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="F1 score (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('F1')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_ppv,na.rm=TRUE)#
sem <- sapply(1:ncol(all_ppv),function(x)#
	sd(all_ppv[,x],na.rm=TRUE)/sqrt(nrow(all_ppv)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="PPV (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('PPV')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_roc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_roc),function(x)#
	sd(all_roc[,x],na.rm=TRUE)/sqrt(nrow(all_roc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="AUCROC (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, xaxt = 'n', col = cols)#
title('Mean AUCROC')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
# mu <- colMeans(all_tot,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_tot,function(x)#
# 	sd(all_tot[,x],na.rm=TRUE)/sqrt(nrow(all_tot)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="PPV (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Total classified')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# # #=============================================================================#
# mu <- colMeans(all_overall_acc,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_overall_acc,function(x)#
# 	sd(all_overall_acc[,x],na.rm=TRUE)/sqrt(nrow(all_overall_acc)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="Overall accuracy (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Overall accuracy')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# #===============================================================================#
#
dev.off()
mu_f1 <- colMeans(all_f1,na.rm=TRUE)
mu_acc <- colMeans(all_acc,na.rm=TRUE)
mu_f1
mu_acc
pdf(file="KIRC_RNA_missing_perf.pdf", height = 10, width = 10)#
par(mfrow=c(2,2), mar=c(10,7,3,3),las=2,cex.axis=1.3,cex.lab=1.7,cex.main=2)#
#mfrow=c(2,2)#
#===============================================================================#
mu_acc <- colMeans(all_acc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_acc),function(x)#
	sd(all_acc[,x],na.rm=TRUE)/sqrt(nrow(all_acc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('Accuracy')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu_f1 <- colMeans(all_f1,na.rm=TRUE)#
sem <- sapply(1:ncol(all_f1),function(x)#
	sd(all_f1[,x],na.rm=TRUE)/sqrt(nrow(all_f1)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="F1 score (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('F1')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_ppv,na.rm=TRUE)#
sem <- sapply(1:ncol(all_ppv),function(x)#
	sd(all_ppv[,x],na.rm=TRUE)/sqrt(nrow(all_ppv)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="PPV (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('PPV')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_roc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_roc),function(x)#
	sd(all_roc[,x],na.rm=TRUE)/sqrt(nrow(all_roc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="AUCROC (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, xaxt = 'n', col = cols)#
title('Mean AUCROC')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
# mu <- colMeans(all_tot,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_tot,function(x)#
# 	sd(all_tot[,x],na.rm=TRUE)/sqrt(nrow(all_tot)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="PPV (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Total classified')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# # #=============================================================================#
# mu <- colMeans(all_overall_acc,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_overall_acc,function(x)#
# 	sd(all_overall_acc[,x],na.rm=TRUE)/sqrt(nrow(all_overall_acc)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="Overall accuracy (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Overall accuracy')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# #===============================================================================#
#
dev.off()
pdf(file="KIRC_RNA_missing_perf.pdf", height = 10, width = 10)#
par(mfrow=c(2,2), mar=c(10,7,3,3),las=2,cex.axis=1.3,cex.lab=1.5,cex.main=2)#
#mfrow=c(2,2)#
#===============================================================================#
mu_acc <- colMeans(all_acc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_acc),function(x)#
	sd(all_acc[,x],na.rm=TRUE)/sqrt(nrow(all_acc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('Accuracy')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu_f1 <- colMeans(all_f1,na.rm=TRUE)#
sem <- sapply(1:ncol(all_f1),function(x)#
	sd(all_f1[,x],na.rm=TRUE)/sqrt(nrow(all_f1)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="F1 score (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('F1')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_ppv,na.rm=TRUE)#
sem <- sapply(1:ncol(all_ppv),function(x)#
	sd(all_ppv[,x],na.rm=TRUE)/sqrt(nrow(all_ppv)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="PPV (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('PPV')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_roc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_roc),function(x)#
	sd(all_roc[,x],na.rm=TRUE)/sqrt(nrow(all_roc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="AUCROC (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, xaxt = 'n', col = cols)#
title('Mean AUCROC')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
# mu <- colMeans(all_tot,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_tot,function(x)#
# 	sd(all_tot[,x],na.rm=TRUE)/sqrt(nrow(all_tot)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="PPV (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Total classified')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# # #=============================================================================#
# mu <- colMeans(all_overall_acc,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_overall_acc,function(x)#
# 	sd(all_overall_acc[,x],na.rm=TRUE)/sqrt(nrow(all_overall_acc)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="Overall accuracy (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Overall accuracy')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# #===============================================================================#
#
dev.off()
pdf(file="KIRC_RNA_missing_perf.pdf", height = 10, width = 10)#
par(mfrow=c(2,2), mar=c(10,7,3,3),las=2,cex.axis=1.3,cex.lab=1.5,cex.main=2)#
#mfrow=c(2,2)#
#===============================================================================#
mu <- colMeans(all_acc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_acc),function(x)#
	sd(all_acc[,x],na.rm=TRUE)/sqrt(nrow(all_acc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('Accuracy')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_f1,na.rm=TRUE)#
sem <- sapply(1:ncol(all_f1),function(x)#
	sd(all_f1[,x],na.rm=TRUE)/sqrt(nrow(all_f1)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="F1 score (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('F1')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_ppv,na.rm=TRUE)#
sem <- sapply(1:ncol(all_ppv),function(x)#
	sd(all_ppv[,x],na.rm=TRUE)/sqrt(nrow(all_ppv)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="PPV (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('PPV')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_roc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_roc),function(x)#
	sd(all_roc[,x],na.rm=TRUE)/sqrt(nrow(all_roc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="AUCROC (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.2, xaxt = 'n', col = cols)#
title('Mean AUCROC')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
# mu <- colMeans(all_tot,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_tot,function(x)#
# 	sd(all_tot[,x],na.rm=TRUE)/sqrt(nrow(all_tot)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="PPV (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Total classified')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# # #=============================================================================#
# mu <- colMeans(all_overall_acc,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_overall_acc,function(x)#
# 	sd(all_overall_acc[,x],na.rm=TRUE)/sqrt(nrow(all_overall_acc)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="Overall accuracy (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Overall accuracy')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# #===============================================================================#
#
dev.off()
pdf(file="KIRC_RNA_missing_perf.pdf", height = 10, width = 10)#
par(mfrow=c(2,2), mar=c(10,7,3,3),las=2,cex.axis=1.3,cex.lab=1.5,cex.main=2)#
#mfrow=c(2,2)#
#===============================================================================#
mu <- colMeans(all_acc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_acc),function(x)#
	sd(all_acc[,x],na.rm=TRUE)/sqrt(nrow(all_acc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('Accuracy')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_f1,na.rm=TRUE)#
sem <- sapply(1:ncol(all_f1),function(x)#
	sd(all_f1[,x],na.rm=TRUE)/sqrt(nrow(all_f1)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="F1 score (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('F1')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_ppv,na.rm=TRUE)#
sem <- sapply(1:ncol(all_ppv),function(x)#
	sd(all_ppv[,x],na.rm=TRUE)/sqrt(nrow(all_ppv)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="PPV (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('PPV')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_roc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_roc),function(x)#
	sd(all_roc[,x],na.rm=TRUE)/sqrt(nrow(all_roc)))#
plot(1:length(mu),mu,xlab="percent data missing", ylim = c(0.4,0.8),#
	type='p',ylab="AUCROC (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.2, xaxt = 'n', col = cols)#
title('Mean AUCROC')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
# mu <- colMeans(all_tot,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_tot,function(x)#
# 	sd(all_tot[,x],na.rm=TRUE)/sqrt(nrow(all_tot)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="PPV (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Total classified')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# # #=============================================================================#
# mu <- colMeans(all_overall_acc,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_overall_acc,function(x)#
# 	sd(all_overall_acc[,x],na.rm=TRUE)/sqrt(nrow(all_overall_acc)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="Overall accuracy (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Overall accuracy')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# #===============================================================================#
#
dev.off()
pctMiss
distinct(pctMiss)
unqiue(pctMiss)
unique(pctMiss)
names(pctMiss) <- names(tot)#
barplot(pctMiss*100,main="% missing in profile",ylim=c(0,100))
names(pctMiss) <- names(tot)#
barplot(pctMiss*100,main="% missing in profile",ylim=c(0,100))
names(tot)
names(pctMiss) <- names(tot)#
barplot(pctMiss*100,main="% missing in profile",ylim=c(0,100))
names(pctMiss) <- names(tot)#
barplot(unique(pctMiss)*100,main="% missing in profile",ylim=c(0,100))
names(pctMiss) <- names(tot)#
barplot(unique(pctMiss)*100,main="% missing in profile",ylim=c(0,100))
axis(side = 1)
axis(side = 1, labels = c(1,2))
axis(side = 1, labels = c(1,2), at = c(1,2))
barplot(unique(pctMiss)*100,main="% missing in profile",ylim=c(0,100))#
> axis(side = 1)
axis(side = 1, labels = c(1,2), at = c(1,2))
names(pctMiss) <- c(10,50,70,85,90,95,99)
pctMiss
names(pctMiss) <- c(10,50,70,85,90,95,99)
temp_pctMiss <- unique(pctMiss)#
names(temp_pctMiss) <- c(10,50,70,85,90,95,99)#
barplot(temp_pctMiss*100,main="% missing in profile",ylim=c(0,100), xaxt = 'n')
temp_pctMiss
temp_pctMiss <- unique(pctMiss)#
names(temp_pctMiss) <- c(10,50,70,85,90,95,99)#
barplot(temp_pctMiss*100,main="% missing in profile",ylim=c(0,100))
temp_pctMiss <- unique(pctMiss)#
names(temp_pctMiss) <- c(10,50,70,85,90,95,99)#
barplot(temp_pctMiss*100,main="% missing",ylim=c(0,100), xlab = "percentage missing data set", ylab = "% missing in profile")
temp_pctMiss <- unique(pctMiss)#
names(temp_pctMiss) <- c(10,50,70,85,90,95,99)#
barplot(temp_pctMiss*100,main="% missing",ylim=c(0,100), xlab = "percentage missing data set", ylab = "% missing in profile", col = cols)
cols <- brewer.pal(n=length(combSet)+2,name="Blues")#
cols <- cols[-c(1,2)]#
pdf(file="KIRC_RNA_missing_perf.pdf", height = 10, width = 10)#
par(mfrow=c(3,3), mar=c(10,7,3,3),las=2,cex.axis=1.3,cex.lab=1.5,cex.main=2)#
#mfrow=c(2,2)#
#===============================================================================#
mu <- colMeans(all_acc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_acc),function(x)#
	sd(all_acc[,x],na.rm=TRUE)/sqrt(nrow(all_acc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('Accuracy')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_f1,na.rm=TRUE)#
sem <- sapply(1:ncol(all_f1),function(x)#
	sd(all_f1[,x],na.rm=TRUE)/sqrt(nrow(all_f1)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="F1 score (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('F1')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_ppv,na.rm=TRUE)#
sem <- sapply(1:ncol(all_ppv),function(x)#
	sd(all_ppv[,x],na.rm=TRUE)/sqrt(nrow(all_ppv)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="PPV (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('PPV')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_roc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_roc),function(x)#
	sd(all_roc[,x],na.rm=TRUE)/sqrt(nrow(all_roc)))#
plot(1:length(mu),mu,xlab="percent data missing", ylim = c(0.4,0.8),#
	type='p',ylab="AUCROC (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.2, xaxt = 'n', col = cols)#
title('Mean AUCROC')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_pr,na.rm=TRUE)#
sem <- sapply(1:ncol(all_pr),function(x)#
	sd(all_pr[,x],na.rm=TRUE)/sqrt(nrow(all_pr)))#
plot(1:length(mu),mu,xlab="percent data missing", ylim = c(0.4,0.8),#
	type='p',ylab="AUPR (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.2, xaxt = 'n', col = cols)#
title('Mean AUPR')#
axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
# mu <- colMeans(all_tot,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_tot,function(x)#
# 	sd(all_tot[,x],na.rm=TRUE)/sqrt(nrow(all_tot)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="PPV (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Total classified')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# # #=============================================================================#
# mu <- colMeans(all_overall_acc,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_overall_acc,function(x)#
# 	sd(all_overall_acc[,x],na.rm=TRUE)/sqrt(nrow(all_overall_acc)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="Overall accuracy (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Overall accuracy')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# #===============================================================================#
temp_pctMiss <- unique(pctMiss)#
names(temp_pctMiss) <- c(10,50,70,85,90,95,99)#
barplot(temp_pctMiss*100,main="% missing",ylim=c(0,100), xlab = "percentage missing data set", ylab = "% missing in profile", col = cols)#
#
dev.off()
pctMiss
pctMiss[1]
pctMiss[][1]]
pctMiss[[1]]
length(which(pctMiss == pctMiss[[1]]))
length(which(pctMiss == pctMiss[[2]]))
length(which(pctMiss == pctMiss[[3]]))
length(which(pctMiss == pctMiss[[4]]))
length(which(pctMiss == pctMiss[[5]]))
length(which(pctMiss == pctMiss[[6]]))
length(which(pctMiss == pctMiss[[7]]))
load('complete_perf_missingness.RData')
cols <- brewer.pal(n=length(combSet)+2,name="Blues")#
cols <- cols[-c(1,2)]#
pdf(file="KIRC_RNA_missing_perf.pdf", height = 10, width = 10)#
par(mfrow=c(3,3), mar=c(10,7,3,3),las=2,cex.axis=1.3,cex.lab=1.5,cex.main=2)#
#mfrow=c(2,2)#
#===============================================================================#
mu <- colMeans(all_acc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_acc),function(x)#
	sd(all_acc[,x],na.rm=TRUE)/sqrt(nrow(all_acc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('Accuracy')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_f1,na.rm=TRUE)#
sem <- sapply(1:ncol(all_f1),function(x)#
	sd(all_f1[,x],na.rm=TRUE)/sqrt(nrow(all_f1)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="F1 score (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('F1')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_ppv,na.rm=TRUE)#
sem <- sapply(1:ncol(all_ppv),function(x)#
	sd(all_ppv[,x],na.rm=TRUE)/sqrt(nrow(all_ppv)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="PPV (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('PPV')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_roc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_roc),function(x)#
	sd(all_roc[,x],na.rm=TRUE)/sqrt(nrow(all_roc)))#
plot(1:length(mu),mu,xlab="percent data missing", ylim = c(0.4,0.8),#
	type='p',ylab="AUCROC (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.2, xaxt = 'n', col = cols)#
title('Mean AUCROC')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_pr,na.rm=TRUE)#
sem <- sapply(1:ncol(all_pr),function(x)#
	sd(all_pr[,x],na.rm=TRUE)/sqrt(nrow(all_pr)))#
plot(1:length(mu),mu,xlab="percent data missing", ylim = c(0.4,0.8),#
	type='p',ylab="AUPR (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.2, xaxt = 'n', col = cols)#
title('Mean AUPR')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
# mu <- colMeans(all_tot,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_tot,function(x)#
# 	sd(all_tot[,x],na.rm=TRUE)/sqrt(nrow(all_tot)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="PPV (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Total classified')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# # #=============================================================================#
# mu <- colMeans(all_overall_acc,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_overall_acc,function(x)#
# 	sd(all_overall_acc[,x],na.rm=TRUE)/sqrt(nrow(all_overall_acc)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="Overall accuracy (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Overall accuracy')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# #===============================================================================#
temp_pctMiss <- unique(pctMiss)#
names(temp_pctMiss) <- c(0,10,30,50,70,80,85,90,95,99)#
barplot(temp_pctMiss*100,main="% missing",ylim=c(0,100), xlab = "percentage missing data set", ylab = "% missing in profile", col = cols)#
#
dev.off()
temp_pctMiss
pctMiss
load('complete_perf_missingness.RData')#
#
cols <- brewer.pal(n=length(combSet)+2,name="Blues")#
cols <- cols[-c(1,2)]#
pdf(file="KIRC_RNA_missing_perf.pdf", height = 10, width = 10)#
par(mfrow=c(3,3), mar=c(10,7,3,3),las=2,cex.axis=1.3,cex.lab=1.5,cex.main=2)#
#mfrow=c(2,2)#
#===============================================================================#
mu <- colMeans(all_acc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_acc),function(x)#
	sd(all_acc[,x],na.rm=TRUE)/sqrt(nrow(all_acc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('Accuracy')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_f1,na.rm=TRUE)#
sem <- sapply(1:ncol(all_f1),function(x)#
	sd(all_f1[,x],na.rm=TRUE)/sqrt(nrow(all_f1)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="F1 score (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('F1')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_ppv,na.rm=TRUE)#
sem <- sapply(1:ncol(all_ppv),function(x)#
	sd(all_ppv[,x],na.rm=TRUE)/sqrt(nrow(all_ppv)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="PPV (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('PPV')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_roc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_roc),function(x)#
	sd(all_roc[,x],na.rm=TRUE)/sqrt(nrow(all_roc)))#
plot(1:length(mu),mu,xlab="percent data missing", ylim = c(0.4,0.8),#
	type='p',ylab="AUCROC (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.2, xaxt = 'n', col = cols)#
title('Mean AUCROC')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_pr,na.rm=TRUE)#
sem <- sapply(1:ncol(all_pr),function(x)#
	sd(all_pr[,x],na.rm=TRUE)/sqrt(nrow(all_pr)))#
plot(1:length(mu),mu,xlab="percent data missing", ylim = c(0.4,0.8),#
	type='p',ylab="AUPR (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.2, xaxt = 'n', col = cols)#
title('Mean AUPR')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
# mu <- colMeans(all_tot,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_tot,function(x)#
# 	sd(all_tot[,x],na.rm=TRUE)/sqrt(nrow(all_tot)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="PPV (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Total classified')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# # #=============================================================================#
# mu <- colMeans(all_overall_acc,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_overall_acc,function(x)#
# 	sd(all_overall_acc[,x],na.rm=TRUE)/sqrt(nrow(all_overall_acc)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="Overall accuracy (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Overall accuracy')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# #===============================================================================#
temp_pctMiss <- unique(pctMiss)#
names(temp_pctMiss) <- c(10,50,70,85,90,95,99,0,30,80)#
barplot(temp_pctMiss*100,main="% missing",ylim=c(0,100), xlab = "percentage missing data set", ylab = "% missing in profile", col = cols)#
#
dev.off()
load('complete_perf_missingness.RData')#
#
cols <- brewer.pal(n=length(combSet)+2,name="Blues")#
cols <- cols[-c(1,2)]#
pdf(file="KIRC_RNA_missing_perf.pdf", height = 10, width = 10)#
par(mfrow=c(3,3), mar=c(10,7,3,3),las=2,cex.axis=1.3,cex.lab=1.5,cex.main=2)#
#mfrow=c(2,2)#
#===============================================================================#
mu <- colMeans(all_acc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_acc),function(x)#
	sd(all_acc[,x],na.rm=TRUE)/sqrt(nrow(all_acc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('Accuracy')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_f1,na.rm=TRUE)#
sem <- sapply(1:ncol(all_f1),function(x)#
	sd(all_f1[,x],na.rm=TRUE)/sqrt(nrow(all_f1)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="F1 score (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('F1')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_ppv,na.rm=TRUE)#
sem <- sapply(1:ncol(all_ppv),function(x)#
	sd(all_ppv[,x],na.rm=TRUE)/sqrt(nrow(all_ppv)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="PPV (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('PPV')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_roc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_roc),function(x)#
	sd(all_roc[,x],na.rm=TRUE)/sqrt(nrow(all_roc)))#
plot(1:length(mu),mu,xlab="percent data missing", ylim = c(0.4,0.8),#
	type='p',ylab="AUCROC (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.2, xaxt = 'n', col = cols)#
title('Mean AUCROC')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_pr,na.rm=TRUE)#
sem <- sapply(1:ncol(all_pr),function(x)#
	sd(all_pr[,x],na.rm=TRUE)/sqrt(nrow(all_pr)))#
plot(1:length(mu),mu,xlab="percent data missing", ylim = c(0.4,0.8),#
	type='p',ylab="AUPR (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.2, xaxt = 'n', col = cols)#
title('Mean AUPR')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
# mu <- colMeans(all_tot,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_tot,function(x)#
# 	sd(all_tot[,x],na.rm=TRUE)/sqrt(nrow(all_tot)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="PPV (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Total classified')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# # #=============================================================================#
# mu <- colMeans(all_overall_acc,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_overall_acc,function(x)#
# 	sd(all_overall_acc[,x],na.rm=TRUE)/sqrt(nrow(all_overall_acc)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="Overall accuracy (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Overall accuracy')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# #===============================================================================#
temp_pctMiss <- unique(pctMiss)#
temp_pctMiss <- sort(temp_pctMiss)#
names(temp_pctMiss) <- c(0,10,30,50,70,80,85,90,95,99)#
barplot(temp_pctMiss*100,main="% missing",ylim=c(0,100), xlab = "percentage missing data set", ylab = "% missing in profile", col = cols)#
#
dev.off()
load('complete_perf_missingness.RData')#
#
cols <- brewer.pal(n=length(combSet)+2,name="Blues")#
cols <- cols[-c(1,2)]#
pdf(file="KIRC_RNA_missing_perf.pdf", height = 10, width = 10)#
par(mfrow=c(2,3), mar=c(10,7,3,3),las=2,cex.axis=1.3,cex.lab=1.5,cex.main=2)#
#mfrow=c(2,2)#
#===============================================================================#
mu <- colMeans(all_acc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_acc),function(x)#
	sd(all_acc[,x],na.rm=TRUE)/sqrt(nrow(all_acc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('Accuracy')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_f1,na.rm=TRUE)#
sem <- sapply(1:ncol(all_f1),function(x)#
	sd(all_f1[,x],na.rm=TRUE)/sqrt(nrow(all_f1)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="F1 score (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('F1')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_ppv,na.rm=TRUE)#
sem <- sapply(1:ncol(all_ppv),function(x)#
	sd(all_ppv[,x],na.rm=TRUE)/sqrt(nrow(all_ppv)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="PPV (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('PPV')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_roc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_roc),function(x)#
	sd(all_roc[,x],na.rm=TRUE)/sqrt(nrow(all_roc)))#
plot(1:length(mu),mu,xlab="percent data missing", ylim = c(0.4,0.8),#
	type='p',ylab="AUCROC (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.2, xaxt = 'n', col = cols)#
title('Mean AUCROC')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_pr,na.rm=TRUE)#
sem <- sapply(1:ncol(all_pr),function(x)#
	sd(all_pr[,x],na.rm=TRUE)/sqrt(nrow(all_pr)))#
plot(1:length(mu),mu,xlab="percent data missing", ylim = c(0.4,0.8),#
	type='p',ylab="AUPR (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.2, xaxt = 'n', col = cols)#
title('Mean AUPR')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
# mu <- colMeans(all_tot,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_tot,function(x)#
# 	sd(all_tot[,x],na.rm=TRUE)/sqrt(nrow(all_tot)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="PPV (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Total classified')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# # #=============================================================================#
# mu <- colMeans(all_overall_acc,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_overall_acc,function(x)#
# 	sd(all_overall_acc[,x],na.rm=TRUE)/sqrt(nrow(all_overall_acc)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="Overall accuracy (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Overall accuracy')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# #===============================================================================#
temp_pctMiss <- unique(pctMiss)#
temp_pctMiss <- sort(temp_pctMiss)#
names(temp_pctMiss) <- c(0,10,30,50,70,80,85,90,95,99)#
barplot(temp_pctMiss*100,main="% missing",ylim=c(0,100), xlab = "percentage missing data set", ylab = "% missing in profile", col = cols)#
#
dev.off()
load('complete_perf_missingness.RData')#
#
cols <- brewer.pal(n=length(combSet)+2,name="Blues")#
cols <- cols[-c(1,2)]#
pdf(file="KIRC_RNA_missing_perf.pdf", height = 10, width = 10)#
par(mfrow=c(3,3), mar=c(10,7,3,3),las=2,cex.axis=1.3,cex.lab=1.5,cex.main=2)#
#mfrow=c(2,2)#
#===============================================================================#
mu <- colMeans(all_acc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_acc),function(x)#
	sd(all_acc[,x],na.rm=TRUE)/sqrt(nrow(all_acc)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="accuracy (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('Accuracy')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_f1,na.rm=TRUE)#
sem <- sapply(1:ncol(all_f1),function(x)#
	sd(all_f1[,x],na.rm=TRUE)/sqrt(nrow(all_f1)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="F1 score (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('F1')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_ppv,na.rm=TRUE)#
sem <- sapply(1:ncol(all_ppv),function(x)#
	sd(all_ppv[,x],na.rm=TRUE)/sqrt(nrow(all_ppv)))#
plot(1:length(mu),mu,xlab="percent data missing",#
	type='p',ylab="PPV (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
title('PPV')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_roc,na.rm=TRUE)#
sem <- sapply(1:ncol(all_roc),function(x)#
	sd(all_roc[,x],na.rm=TRUE)/sqrt(nrow(all_roc)))#
plot(1:length(mu),mu,xlab="percent data missing", ylim = c(0.4,0.8),#
	type='p',ylab="AUCROC (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.2, xaxt = 'n', col = cols)#
title('Mean AUCROC')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
mu <- colMeans(all_pr,na.rm=TRUE)#
sem <- sapply(1:ncol(all_pr),function(x)#
	sd(all_pr[,x],na.rm=TRUE)/sqrt(nrow(all_pr)))#
plot(1:length(mu),mu,xlab="percent data missing", ylim = c(0.4,0.8),#
	type='p',ylab="AUPR (mean+/-SEM)",#
	las=1,pch=16,cex=1.5,cex.axis=1.2, xaxt = 'n', col = cols)#
title('Mean AUPR')#
axis(1,at=1:length(mu), labels=c(0,10,30,50,70,80,85,90,95,99),cex.axis=1.4)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
#===============================================================================#
# mu <- colMeans(all_tot,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_tot,function(x)#
# 	sd(all_tot[,x],na.rm=TRUE)/sqrt(nrow(all_tot)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="PPV (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Total classified')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# # #=============================================================================#
# mu <- colMeans(all_overall_acc,na.rm=TRUE)#
# sem <- sapply(1:ncol(all_overall_acc,function(x)#
# 	sd(all_overall_acc[,x],na.rm=TRUE)/sqrt(nrow(all_overall_acc)))#
# plot(1:length(mu),mu,xlab="percent data missing",#
# 	type='p',ylab="Overall accuracy (mean+/-SEM)",#
# 	las=1,pch=16,cex=1.5,cex.axis=1.4, ylim = c(30,70), xaxt = 'n', col = cols)#
# title('Overall accuracy')#
# axis(1,at=1:length(mu), labels=c(10,50,70,85,90,95,99),cex.axis=1.4)#
# # segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,col=colSet,lwd=3)#
# segments(x0=1:length(mu), y0=mu-sem,y1=mu+sem,lwd=3, col = cols)#
# #===============================================================================#
temp_pctMiss <- unique(pctMiss)#
temp_pctMiss <- sort(temp_pctMiss)#
names(temp_pctMiss) <- c(0,10,30,50,70,80,85,90,95,99)#
barplot(temp_pctMiss*100,main="% missing",ylim=c(0,100), xlab = "percentage missing data set", ylab = "% missing in profile", col = cols)#
#
dev.off()
setwd('/Users/ahmadshah/netDx_fork')
ls
ls()
