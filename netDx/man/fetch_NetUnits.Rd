% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch_NetUnits.R
\name{fetch_NetUnits}
\alias{fetch_NetUnits}
\title{Find the units within features, that patients individually map to}
\usage{
fetch_NetUnits(pat_GR, netList, whichNets, trackMapping_detail = FALSE,
  verbose = FALSE)
}
\arguments{
\item{verbose}{(logical) print messages}

\item{pat_GR:}{(GRanges) ranges that patients map to. The metadata 
columns are required to have:
1. ID (char): patient IDs
2. LOCUS_NAMES (char): comma-separated vector of units that patients
contributed}

\item{netList:}{(list) keys are networks, values are vectors of 
unit features within those networks (e.g. pathways and genes)}

\item{whichNets:}{(char) which networks to fetch data for ; e.g. 
could be set of feature-selected networks}

\item{trackMapping_detail:}{(logical) if TRUE, returns the mapping
from individual patient events to units to features.
If FALSE, simply groups all units that contribute to 'whichNets',
without tracking individual mappings. 
The former is useful for understanding the contribution of individual
events to the overall feature selection.}
}
\value{
Depends on trackMapping_detail value.
if FALSE, (data.frame) ID: Patient ID ; UNIT: comma-separated vector of
unit feature names contributed by the patient
if TRUE, (GRanges) same as input pat_GR, but with a metadata column 
added.
New column is named unit2feature. Contains semicolon-delimited pairs of 
genes and feature-selected pathways in which genes are members. 
Format: geneX@pathway1;geneX@pathway2;geneY@pathway3. 
Here, the CNV overlaps geneX, which belongs in pathway1 and pathway2, 
and  also geneY, which belongs in pathway3. If a CNV does not overlap 
any genes in any feature-selected pathways, the value for that CNV is 
"NA".
}
\description{
Find the units within features, that patients individually map to
}
\details{
This function is useful for binary networks where patients
contributes to units of a set. For example, CNV networks where patient
overlaps with single features - here, genes - result in membership in a
set - here, pathways.
}
\examples{
data(TCGA_mini,pathway_GR,pathwayList)
x <- getRegionOL(cnv_GR,pathway_GR)
y <- fetch_NetUnits(x,pathwayList, names(pathwayList))
y <- fetch_NetUnits(x,pathwayList, names(pathwayList),
	trackMapping_detail=TRUE)
}
