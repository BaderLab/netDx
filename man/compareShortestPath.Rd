% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compareShortestPath.R
\name{compareShortestPath}
\alias{compareShortestPath}
\title{compare intra-cluster shortest distance to overall shortest distance of the
 network}
\usage{
compareShortestPath(net, pheno, plotDist = FALSE, verbose = TRUE)
}
\arguments{
\item{net}{(data.frame) network on which to compute shortest path. 
SOURCE, TARGET, WEIGHTS. 
Column names are ignored but expects a header row. Distances will be 
computed based on the third column}

\item{pheno}{(data.frame) Node information. ID (node name) and GROUP
(cluster name)}

\item{plotDist}{(logical) if TRUE, creates a violin plot showing the 
shortest path distributions for each group.}

\item{verbose}{(logical) print messages}
}
\value{
(list) Two lists, 'avg' and 'all'. keys are cluster names. 
values for 'avg' are mean shortest path ; for 'all', are all pairwise
shortest paths
for subnetworks that contain only the edges where source and target both 
belong to the corresponding cluster. In addition, there is an 'overall' 
entry for the mean shortest distance for the entire network.
}
\description{
compare intra-cluster shortest distance to overall shortest distance of the
 network
}
\details{
Uses Dijkstra's algorithm for weighted edges. Pairwise nodes with
infinite distances are excluded before computing average shortest path 
for a network. This function requires the igraph package to be installed.
}
\examples{
data(silh); 
colnames(silh$net)[3] <- 'weight'
compareShortestPath(silh$net, silh$groups)
}
