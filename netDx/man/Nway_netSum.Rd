% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nWay_netSum.R
\name{Nway_netSum}
\alias{Nway_netSum}
\title{Performs feature selection using multiple resamplings of the data}
\usage{
Nway_netSum(netmat = NULL, phenoDF, predClass, outDir, netDir, splitN = 3L,
  seed_resampling = 103L, nFoldCV = 10L, filter_WtSum = 100L,
  cliqueFilter = TRUE, cliquePthresh = 0.07, cliqueReps = 2500L,
  minEnr = -1, numCores = 1L, GM_numCores = NULL, useAttributes = NULL,
  seed_CVqueries = 42L, ...)
}
\arguments{
\item{netmat}{(matrix) output of countPatientsInNet()}

\item{phenoDF}{(data.frame) patient ID,STATUS, ATTRIB_GROUP,ATTRIB_NAME
last two are optional and only used if useAttributes is not NULL. Note
that duplicate ATTRIB_NAMEs are currently not supported, even if they
are in different ATTRIB_GROUPs.}

\item{predClass}{(char) patient class to predict}

\item{outDir}{(char) path to dir where results should be stored. 
Results for resampling i are under \code{<outDir>/part<i>}, while
predictor evaluation results are directly in \code{outDir}.}

\item{netDir}{(char) path to dir where patient similarity networks
are stored. These networks should contain all training and test patients
in the dataset. This function will subset these networks to generate
networks consisting e.g. only of training samples.}

\item{splitN}{(integer) number of data resamplings to use}

\item{seed_resampling}{(integer) RNG seed for deciding hold-out sets
while resampling.}

\item{nFoldCV}{(integer) number of folds in the inner cross-validation
loop}

\item{filter_WtSum}{(numeric between 5-100) Limit to top-ranked 
networks such that cumulative weight is less than this parameter. 
e.g. If filter_WtSum=20, first order networks by decreasing weight; 
then keep those whose cumulative weight <= 20.}

\item{cliqueFilter}{(logical) if TRUE, applies clique filtering to train
networks}

\item{cliquePthresh}{(numeric between 0 and 1) networks with clique-
filtering p-value below this threshold  pass clique-filtering}

\item{cliqueReps}{(integer) number of permutations for clique filtering}

\item{minEnr}{(integer -1 to 1) minEnr param in cliqueFilterNets()}

\item{numCores}{(integer) num cores for parallel processing}

\item{GM_numCores}{(integer) num cores for running GM. If NULL, is set
to max(1,numCores-1). Set to a lower value if the default setting
gives out-of-memory error. This may happen if networks are denser than
expected}

\item{useAttributes}{(char) vector of attribute names to be used in 
executing GM queries. Note: Not currently well-tested, suggest leaving
as NULL.}

\item{seed_CVqueries}{(integer) RNG seed for inner cross-validation
loop}

\item{...}{params for GM_runCV_featureSet()}
}
\description{
Performs feature selection using multiple resamplings of the data
}
\details{
This function is used for feature selection of patient networks,
using multiple resamplings of input data. It is intended for use in
the scenario where patient networks are sparse and binary. 
This function should be called after defining all patient networks. It
performs the following steps:
For i = 1..splitN
		randomly split patients into training and test
		(optional) filter training networks to exclude random-like networks
		create GeneMANIA database for cross-validation
		run 10-fold cross validation
	score networks based on 10-fold CV
end
using test samples from all resamplings, measure predictor performance.

In short, this function performs all steps involved in building and 
evaluating the predictor.
}
