% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/buildPredictor_sparseGenetic.R
\name{buildPredictor_sparseGenetic}
\alias{buildPredictor_sparseGenetic}
\title{Performs feature selection using multiple resamplings of the data}
\usage{
buildPredictor_sparseGenetic(phenoDF, cnv_GR, predClass, group_GRList,
  outDir = tempdir(), splitN = 3L, featScoreMax = 10L,
  filter_WtSum = 100L, enrichLabels = TRUE, enrichPthresh = 0.07,
  numPermsEnrich = 2500L, minEnr = -1, numCores = 1L,
  FS_numCores = NULL, ...)
}
\arguments{
\item{phenoDF}{(data.frame) sample metadat. patient ID,STATUS}

\item{cnv_GR}{(GRanges) genetic events. Must contain "ID" column mapping
the event to a patient. ID must correspond to the ID column in phenoDF}

\item{predClass}{(char) patient class to predict}

\item{outDir}{(char) path to dir where results should be stored. 
Results for resampling i are under \code{<outDir>/part<i>}, while
predictor evaluation results are directly in \code{outDir}.}

\item{splitN}{(integer) number of data resamplings to use}

\item{featScoreMax}{(integer) max score for features in feature selection}

\item{filter_WtSum}{(numeric between 5-100) Limit to top-ranked 
networks such that cumulative weight is less than this parameter. 
e.g. If filter_WtSum=20, first order networks by decreasing weight; 
then keep those whose cumulative weight <= 20.}

\item{enrichLabels}{(logical) if TRUE, applies label enrichment to train
networks}

\item{enrichPthresh}{(numeric between 0 and 1) networks with label
enrichment p-value below this threshold  pass enrichment}

\item{numPermsEnrich}{(integer) number of permutations for label enrichment}

\item{minEnr}{(integer -1 to 1) minEnr param in enrichLabelsNets()}

\item{numCores}{(integer) num cores for parallel processing}

\item{FS_numCores}{(integer) num cores for running GM. If NULL, is set
to max(1,numCores-1). Set to a lower value if the default setting
gives out-of-memory error. This may happen if networks are denser than
expected}

\item{...}{params for runFeatureSelection()}
}
\value{
No value. Side efect of writing feature scores and predictions to 
`outDir`. Output format is that of running `RR_featureTally()`. Refer to 
that function for the details of output files.
}
\description{
Performs feature selection using multiple resamplings of the data
}
\details{
This function is used for feature selection of patient networks,
using multiple resamplings of input data. It is intended for use in
the scenario where patient networks are sparse and binary. 
This function should be called after defining all patient networks. It
performs the following steps:
For i = 1..splitN
		randomly split patients into training and test
		(optional) filter training networks to exclude random-like networks
		compile features into database for cross-validation
	score networks out of 10
end
using test samples from all resamplings, measure predictor performance.

In short, this function performs all steps involved in building and 
evaluating the predictor.
}
